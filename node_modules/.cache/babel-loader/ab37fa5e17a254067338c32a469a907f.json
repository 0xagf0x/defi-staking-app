{"ast":null,"code":"import _regeneratorRuntime from \"/Users/charlesbuckley/solidity/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/charlesbuckley/solidity/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/charlesbuckley/solidity/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/Users/charlesbuckley/solidity/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/charlesbuckley/solidity/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/Users/charlesbuckley/solidity/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/charlesbuckley/solidity/defi-staking-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/charlesbuckley/solidity/defi-staking-app/src/components/App.js\";\n// to run: npm run start\nimport React, { Component } from 'react';\nimport Navabr from './Navbar';\nimport './App.css';\nimport Web3 from 'web3';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function () {\n      var _UNSAFE_componentWillMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function UNSAFE_componentWillMount() {\n        return _UNSAFE_componentWillMount.apply(this, arguments);\n      }\n\n      return UNSAFE_componentWillMount;\n    }() // load in web3 and connect metamask when the app loads \n\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!window.ethererum) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                // if the browser window detects Ethereum\n                window.web3 = new Web3(window.ethererum); // emable new instance\n\n                _context2.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context2.next = 13;\n                break;\n\n              case 6:\n                if (!window.web3) {\n                  _context2.next = 12;\n                  break;\n                }\n\n                // or if we detect web3 in the browser\n                window.web3 = new Web3(window.web3.currentProvider); // enable current provider \n\n                _context2.next = 10;\n                return window.web3.currentProvider.enable();\n\n              case 10:\n                _context2.next = 13;\n                break;\n\n              case 12:\n                window.alert('No ethereum browser detected. Metamask ');\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      account: 'test'\n    };\n    return _this;\n  } // our React code \n\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Navabr, {\n        account: this.state.account,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/charlesbuckley/solidity/defi-staking-app/src/components/App.js"],"names":["React","Component","Navabr","Web3","App","loadWeb3","window","ethererum","web3","ethereum","enable","currentProvider","alert","props","state","account"],"mappings":";;;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,MAAjB;;IAEMC,G;;;;;;;;;;;;uBAGQ,KAAKC,QAAL,E;;;;;;;;;;;;;;;QAGV;;;;;;;;;;qBAEOC,MAAM,CAACC,S;;;;;AAAa;AACnBD,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIL,IAAJ,CAASG,MAAM,CAACC,SAAhB,CAAd,C,CAA0C;;;uBACpCD,MAAM,CAACG,QAAP,CAAgBC,MAAhB,E;;;;;;;qBACCJ,MAAM,CAACE,I;;;;;AAAQ;AACtBF,gBAAAA,MAAM,CAACE,IAAP,GAAc,IAAIL,IAAJ,CAASG,MAAM,CAACE,IAAP,CAAYG,eAArB,CAAd,C,CAAoD;;;uBAC9CL,MAAM,CAACE,IAAP,CAAYG,eAAZ,CAA4BD,MAA5B,E;;;;;;;AAENJ,gBAAAA,MAAM,CAACM,KAAP,CAAa,yCAAb;;;;;;;;;;;;;;;;;;AAIR,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAFe;AAKlB,G,CACD;;;;;6BACU;AACN,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;EAhCad,S;;AAoClB,eAAeG,GAAf","sourcesContent":["// to run: npm run start\n\nimport React, {Component} from 'react';\nimport Navabr from './Navbar';\nimport './App.css';\nimport Web3 from 'web3';\n\nclass App extends Component {\n\n    async UNSAFE_componentWillMount() { // runs when app mounts in browser\n        await this.loadWeb3();  // run the loadWeb3 function \n    }\n\n    // load in web3 and connect metamask when the app loads \n    async loadWeb3() {\n        if(window.ethererum) { // if the browser window detects Ethereum\n            window.web3 = new Web3(window.ethererum)  // emable new instance\n            await window.ethereum.enable();  // wait for it to enable\n        } else if (window.web3) { // or if we detect web3 in the browser\n            window.web3 = new Web3(window.web3.currentProvider) // enable current provider \n            await window.web3.currentProvider.enable();  // wait for it to enable\n        } else {\n            window.alert('No ethereum browser detected. Metamask ');\n        }\n    }\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            account: 'test',\n        }\n    }\n    // our React code \n    render () {\n        return (\n            <div>\n                <Navabr account={this.state.account} />\n            </div>\n        )\n    }\n}\n\n\nexport default App"]},"metadata":{},"sourceType":"module"}